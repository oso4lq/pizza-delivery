// button.component.scss

@use "globalStyles.scss" as *;

$state-list-item-hover: rgba(255,255,255,0.06);
$state-list-item-selected: rgba(91,134,190,0.18);

:host[app-button],
:host[app-raised-button],
:host[app-stroked-button],
:host[app-tonal-button] {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  max-width: 300px;
  padding: 8px 16px;
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  line-height: 140%;
  letter-spacing: 0.03em;
  border: 1px solid;
  border-radius: 4px;
  overflow: hidden;
  transition: 0.2s;
  cursor: pointer;
  user-select: none;

  // Миксин для raised-button
  @mixin coloring-raised-button(
    $color-variable,
    $background-variable,
    $border-variable
  ) {
    color: $color-variable;
    background-color: $background-variable;
    border-color: $border-variable;
  }

  // Миксин для hover-состояния task control btns
  @mixin raised-button-hover($bg-hover, $border-hover) {
    &:hover {
      .covering-background {
        background-color: transparent;
      }

      background-color: $bg-hover;
      border-color: $border-hover;
    }
  }

  // Миксин для task control btns
  @mixin control-btns() {
    font-size: 11px;
    line-height: 16px;

    .content {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 6px;
    }
  }

  // Миксин для stroked-button
  @mixin coloring-stroked-button($color-variable, $border-variable) {
    border: 1px solid $border-variable;
    color: $color-variable;
  }

  @mixin coloring-tonal-button($color-variable) {
    $bgTonalColor: color-mix(in srgb, $color-variable 16%, transparent);
    border: 1px solid $bgTonalColor;
    color: $color-variable;
    background-color: $bgTonalColor;
  }

  // ОБЩИЙ КЛАСС ДЛЯ raised - кнопки с заполнением фона
  &.app-raised-button {
    // ТЕКСТ, ФОН, КОНТУР

    &.blue {
      @include coloring-raised-button($white-color, $blue-color, $blue-color);
    }

    &.grey {
      @include coloring-raised-button(
        $white-color,
        $text-secondary,
        $text-secondary
      );
    }

    &.red {
      @include coloring-raised-button($white-color, $red-color, $red-color);
    }
  }

  // ОБЩИЙ КЛАСС ДЛЯ stroked - (полу)прозрачной кнопки с контуром
  &.app-stroked-button {
    // ТЕКСТ, КОНТУР

    &.blue {
      @include coloring-stroked-button($blue-color, $blue-color);
    }

    &.secondary {
      @include coloring-stroked-button($text-secondary, $text-secondary);
    }

    &.red {
      @include coloring-stroked-button($red-color, $red-color);
    }
  }

  // ОБЩИЙ КЛАСС ДЛЯ tonal - фон с непрозрачностью
  &.app-tonal-button {
    // ФОН

    &.primary {
      @include coloring-tonal-button($blue-color);
    }
  }

  &:hover {
    // Затемнение в светлой теме, осветление в тёмной
    .covering-background {
      background-color: $state-list-item-hover;
    }
  }

  // а он для чего нужен?
  &:active {
    .covering-background {
      background-color: $state-list-item-selected;
    }
  }

  &:disabled {
    opacity: 0.3;
    pointer-events: none;

    .covering-background {
      background-color: transparent;
    }
  }

  &.invalid {
    opacity: 0.3;
  }

  &.narrow {
    min-width: 89px;
  }

  &.wide {
    min-width: 100px;
  }

  &.small {
    padding: 6px 12px;
  }

  &.full-width {
    max-width: none;
    width: 100%;
  }

  &.with-icon {
    .content {
      display: flex;
      flex-direction: row;
      gap: 8px;
    }
  }

  // Накладываемый слой
  .covering-background {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 1;
  }

  // Содержимое кнопки
  .content {
    white-space: pre;
    position: relative;
    z-index: 2;
  }
}

// modal-window.component.scss

@use 'sass:color';
@use "globalStyles.scss" as *;
@use '../../../styles/breakpoints.scss' as bp;

@mixin maxSizes($offset) {
  max-width: calc(100vw - $offset);
  max-height: calc(100 * var(--dvh) - $offset);
}

:host {
  display: flex;
  position: fixed;
  gap: 20px;
  top: 0;
  left: 0;
  z-index: 9000;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  justify-content: center;
  align-items: center;

  & .hint {
    white-space: pre-line;
    margin-top: $modal-vertical-spacing;
    font-size: 13px;
    color: $red-color;

    &.before-content {
      margin-top: 0;
      margin-bottom: $modal-vertical-spacing;
    }
  }

  // overscroll-behavior - отменяет передачу события скроллинга по цепочке вложенных элементов от элемента
  // получившего событие до корневого элемента и далее в сам браузер для создания эффекта "отскока" или
  // "обновления страницы" на мобильных браузерах, что иногда необходимо в SPA для избегания обновления
  // страницы при случайном скролле.
  // Здесь отменяем overscroll-behavior для всего компонента.
  // Источник: https://doka.guide/css/overscroll-behavior/
  overscroll-behavior-y: none;
}

.modal-body {
  display: flex;
  flex-direction: column;
  position: relative;
  margin: 0 60px;
  padding: 32px;
  border-radius: 12px;
  opacity: 1;
  overflow-y: hidden;
  // overscroll-behavior - отменяет передачу события скроллинга по цепочке вложенных элементов от элемента
  // получившего событие до корневого элемента и далее в сам браузер для создания эффекта "отскока" или
  // "обновления страницы" на мобильных браузерах, что иногда необходимо в SPA для избегания обновления
  // страницы при случайном скролле.
  // На элементах необходимо ставить рядом с overflow нужного направления. В данном случае -y
  // Источник: https://doka.guide/css/overscroll-behavior/
  overscroll-behavior-y: none;

  @include maxSizes(100px);

  // &.info {
  //  padding-bottom: 0 !important;
  // }

  & footer {
    position: sticky;
    bottom: 0;
    z-index: 9000;

    display: flex;
    align-items: center;
    justify-content: end;
    width: 100%;
    gap: $modal-horizontal-spacing;
    margin-top: 16px;

    app-input-checkbox {
      margin-top: 0px;
      margin-left: 0px;
      margin-right: 10px;
      padding: 0;
      &.left-placement {
        margin-right: auto;
      }
    }
  }

  &.delete {
    header app-entity-path {
      margin-bottom: 4px;
    }

    h3 {
      margin-bottom: $modal-vertical-spacing;
    }
  }
}

.close-btn {
  position: absolute;
  right: 6px;
  top: 6px;
  width: 24px;
  height: 24px;
  color: $service-color;
  z-index: 2;

  &:hover {
    color: $red-color;
  }
}

header {
  display: flex;
  flex-direction: column;
  gap: $modal-vertical-spacing;

  h2 {
    padding: 6px 0;
    margin-bottom: 20px;
  }

  h3 {
    position: sticky;
    top: 0;
    z-index: 1000;
    width: 100%;
    letter-spacing: 0.02em;

    display: flex;
    align-items: center;
    gap: 8px;
  }

  .modal-note {
    font-size: 13px;
    line-height: 18px;
    color: $text-description;
    white-space: pre-line;

    &.warn {
      color: $red-color;
    }
  }

}

.modal-content {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  max-width: calc(100vw - 160px);
  overflow-x: hidden;
  overflow-y: auto;
  // overscroll-behavior - отменяет передачу события скроллинга по цепочке вложенных элементов от элемента
  // получившего событие до корневого элемента и далее в сам браузер для создания эффекта "отскока" или
  // "обновления страницы" на мобильных браузерах, что иногда необходимо в SPA для избегания обновления
  // страницы при случайном скролле.
  // На элементах необходимо ставить рядом с overflow нужного направления. В данном случае -y
  // Источник: https://doka.guide/css/overscroll-behavior/
  overscroll-behavior-y: none;
  margin-bottom: $modal-vertical-spacing;
}

:host.none-height {
  @include bp.screen-width(bp.$width-1200) {
    .modal-body {
      max-height: none;
    }
  }

  .modal-content {
    max-height: none;
  }
}

:host.no-margins {
  margin: unset;

  .modal-body,
  .modal-content,
  .modal-note,
  .hint {
    margin: unset;
  }
}

:host.profile-editor {
  .modal-body {
    height: 1100px;
  }

  .modal-content {
    max-height: none;
    height: 100%;
  }

  .close-btn {
    width: 24px;
    height: 24px;
  }
}

:host.chat-list {
  .modal-body {
    padding: 0px !important;
    padding-left: 10px !important;
    height: 1100px;
  }

  .modal-content {
    max-height: none;
    height: 100%;
  }

  .close-btn {
    width: 14px;
    height: 14px;
    right: 8px;
    top: 6px;
  }
}

:host.full-width {
  .modal-body {
    width: 100%;
  }
}

:host-context(.desktop-small) {
  .modal-body {
    @include maxSizes(72px);
  }
}

:host.mobile {
  .modal-content {
    max-width: unset !important;
  }

  .modal-body {
    margin: unset;

    // Использовалось в мобильной версии модалки для ворклогов, которая уже не актуальна
    // &.info {
    //   padding-top: 0 !important;
    //   padding-bottom: 0 !important;
    // }
  }
}

:host.full-height .modal-body {
  min-height: unset !important;
  max-height: unset !important;
  // из-за использования -webkit-fill-available на mobile Safari модальные окна имеют отступы сверху и снизу
  // поэтому используем только dvh для заполнения видимой области экрана, но не vh!
  // height: -webkit-fill-available !important;
  height: 100dvh;
}

:host.square .modal-body {
  border-radius: 0 !important;
}

:host.mob-resolution-styles {
  font-family: Inter;

  h3 {
    font-size: 20px;
    line-height: 28px;
    font-family: Inter;
  }
}

:host(.with-btn-border) {
  button.with-border {
    border: 1px solid #C7C7C7;
    background-color: transparent;
  }
}
:host(.removal-modal) {
  button.critical {
    background-color: $red-color;
    border: none;
  }
}

:host(.role-editor-modal){
  button.next {
    background-color: rgba(22, 164, 227, 0.16);
    color: $blue-color;
    border: none;
  }
}